<?xml version="1.0" encoding="UTF-8"?>
<!--Traveller Astrogation Mark-Up Langauge (AstroML).
==========================================
Licence	:	Provided freely, but may not be sold by users.
Version	:	0.75
Date	:	23th October 2003
==========================================
Change Record
==========================================
Author: Thomas Jones-Low
Date: 1 June 2005
==========================================
 - changed the sequence of star system elements to be more natural 
    <star><orbit><planet|star><moon>. This is to separate the much complex data
    used for each level in the various display elements. 
 - Added more data elements to the star, orbit, planet and moons to enable
    capturing the extended data generated by the various generation sytems, 
    both Traveller and not. 
==========================================
Author: Thomas Jones-Low
Date: 12 July 2004
==========================================
 - Updated the text type (used in the comments for systems and groups), to allow
 HTML content.
==========================================
Author: Thomas Jones-Low
Date: 11 May 2004
==========================================
 - Replace the HEX with Location, a more  neutral item for locating objects.
 First step for the group maps. 
==========================================
Author: Thomas Jones-Low
Date: 20 April 2004
==========================================
 - Replace the <Companion><Tertiariy> construct with a <Companion maxOccurs=5>,
 allowing for stars with many companions. 
==========================================
Author: Thomas Jones-Low
Date: 5 March 2004
==========================================
 - Added codes for the links between systems <link> <record> <hex1> <hex2> </link>
==========================================
Author: Thomas Jones-Low
Date: 27th October 2003
==========================================
 - Added the PBG codes to the data format
 - Changed the Stellar types to use elements not attributes, for the CSS display. 
==========================================
Author: Thomas Jones-Low
Date: 23th October 2003
==========================================
- More Dividing the schema into types and data elements.
- Redid the layout of sectors and subsectors, it is now more generic.
- Change the system and hexes so the hex id which group it is part of rather
  than the system. 
- Made the use of ID, Name, Text and description more consistent. 
==========================================
Author: Thomas Jones-Low
Date: 16th October 2003
==========================================
Update the scheam to include more base types for easier reading of the schema. 
============================================
Updated the mapping.system elements to include the UWP and other elements
defined by the CT Book 6 and MT base rules for both basic and Extended system
generation. 
==========================================
Amended for better use of reference tables.
==========================================
Author:	Mark A. Preston
Date:	4th March 2001
Target:	AstroXML/Sector v0.00.06
==========================================
Abstract:
Reference data
(1). PROVIDER details permit multiple data sets
(2). TABLE data may be built by any PROVIDER
(3). RECORD entries must be linked to TABLE and PROVIDER
==========================================
 The Traveller game in all forms is owned by Far Future Enterprises. Copyright 
 1977 - 1998 Far Future Enterprises. Traveller is a registered trademark of Far 
 Future Enterprises. Far Future permits web sites and fanzines for this game, 
 provided it contains this notice, that Far Future is notified, and subject to 
 a withdrawal of permission on 90 days notice. The contents of this site are 
 for personal, non-commercial use only. Any use of Far Future Enterprises's 
 copyrighted material or trademarks anywhere on this web site and its files 
 should not be viewed as a challenge to those copyrights or trademarks. In 
 addition, any program/articles/file on this site cannot be republished or 
 distributed without the consent of the author who contributed it. 
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            targetNamespace="http://www.farfuture.net/"
            xmlns="http://www.farfuture.net/" elementFormDefault="qualified"
            version="0.75">

    <!--====================================================-->
    <!--Simple data types used as attribute data-->
    <!--====================================================-->
    <xsd:simpleType name="code">
        <xsd:annotation>
            <xsd:documentation>UWP codes values</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:token">
            <xsd:minLength value="0" fixed="true" />
            <xsd:maxLength value="1" fixed="true"/>
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="remark">
        <xsd:annotation>
            <xsd:documentation>Two letter codes used for trade code and remarks</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:token">
            <xsd:length value="2" fixed="true"/>
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="remarks">
        <xsd:annotation>
            <xsd:documentation> 
                A list of two letter codes used for trade codes. Since the trade
                codes (Ag, In, etc.) can be generated from the data provided, 
                there is no reason to try and parse them. This is not true
                for the remarks (An, Cp, Cx, etc.). So these are kept seperate.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:list itemType="remark" />
    </xsd:simpleType>

    <xsd:simpleType name="d_hex">
        <xsd:annotation>
            <xsd:documentation>Domain Hex "0101-6480" </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
            <xsd:pattern value="0[1-9]0[1-9]" />
            <xsd:pattern value="0[1-9][1-7][0-9]" />
            <xsd:pattern value="0[1-9]80" />
            <xsd:pattern value="[1-5][1-9][1-7][0-9]" />
            <xsd:pattern value="[1-5][1-9]0[1-9]" />
            <xsd:pattern value="[1-5][0-9]80" />
            <xsd:pattern value="6[0-4]0[1-9]" />
            <xsd:pattern value="6[0-4][1-7][0-9]" />
            <xsd:pattern value="6[0-4]80" />
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="s_hex">
        <xsd:annotation>
            <xsd:documentation>Sector Hex "0101-3240"</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
            <xsd:pattern value="0[1-9]0[1-9]" />
            <xsd:pattern value="0[1-9][123][0-9]" />
            <xsd:pattern value="0[1-9]40" />
            <xsd:pattern value="[12][0-9]0[1-9]" />
            <xsd:pattern value="[12][0-9][123][0-9]" />
            <xsd:pattern value="[12][0-9]40" />
            <xsd:pattern value="3[012]0[1-9]" />
            <xsd:pattern value="3[012][123][0-9]" />
            <xsd:pattern value="3[012]40" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="ss_hex">
        <xsd:annotation>
            <xsd:documentation>
                Subsector hex 0101-0810
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:integer">
            <xsd:pattern value="0[1-8]0[1-9]|0[1-8]10"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="imperial_date">
        <xsd:annotation>
            <xsd:documentation>
                Imperial date (formatted as ddd-yyyy) from day zero up to end of 1299
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="[0-2][0-9][0-9]-0[0-9][0-9][0-9]"/>
            <xsd:pattern value="[0-2][0-9][0-9]-1[0-2][0-9][0-9]"/>
            <xsd:pattern value="3[0-5][0-9]-0[0-9][0-9][0-9]"/>
            <xsd:pattern value="3[0-5][0-9]-1[0-2][0-9][0-9]"/>
            <xsd:pattern value="36[0-5]-0[0-9][0-9][0-9]"/>
            <xsd:pattern value="36[0-5]-1[0-2][0-9][0-9]"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="name">
        <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="40" />
            <xsd:whiteSpace value="preserve" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="description">
        <xsd:restriction base="xsd:string">
            <xsd:whiteSpace value="preserve" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="group_type">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="SECTOR" />
            <xsd:enumeration value="SUBSECTOR" />
            <xsd:enumeration value="GROUP" />
            <xsd:enumeration value="QUADRANT" />
            <xsd:enumeration value="DOMAIN" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="orbit_type">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="planet" />
            <xsd:enumeration value="gasgiant" />
            <xsd:enumeration value="belt" />
            <xsd:enumeration value="star" />
            <xsd:enumeration value="empty" />
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="orbit_zone">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="inner" />
            <xsd:enumeration value="life" />
            <xsd:enumeration value="snow" />
            <xsd:enumeration value="outer" />
            <xsd:enumeration value="forbidden" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="primaryID">
        <xsd:restriction base="xsd:ID">
            <xsd:pattern value="[a-z,0-9]{1,10}"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="primaryIDREF">
        <xsd:restriction base="xsd:IDREF">
            <xsd:pattern value="[a-z,0-9]{1,10}"/>
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="secondaryID">
        <xsd:restriction base="xsd:ID">
            <xsd:pattern value="[a-z,0-9]{1,10}\.[a-z,0-9]{1,10}"/>
        </xsd:restriction>
    </xsd:simpleType>
    <xsd:simpleType name="secondaryIDREF">
        <xsd:restriction base="xsd:IDREF">
            <xsd:pattern value="[a-z,0-9]{1,10}\.[a-z,0-9]{1,10}"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="tertiaryID">
        <xsd:restriction base="xsd:ID">
            <xsd:pattern value="[a-z,0-9]{1,10}_[a-z,0-9]{1,10}|[a-z,0-9]{1,10}\.[a-z,0-9]{1,10}_[a-z,0-9]{1,10}"/>
        </xsd:restriction>
    </xsd:simpleType>

    <!--====================================================-->
    <!-- Complex types used as schema data types -->
    <!--====================================================-->

    <xsd:complexType name="location">
        <xsd:annotation>
            <xsd:documentation>
                A location element is used to locate an item in arbirary 2D or
                3D space and in time. It is used for the star groups 
                (sector/subsector) to locate them relative to each other for 
                mapping purposes. The date is used to keep track of the system
                over time, so the same system may appear in the data set more
                than once. 
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
            <xsd:extension base="s_hex">
                <xsd:attribute name="type" use="required" type="group_type"/>
                <xsd:attribute name="group" type="secondaryIDREF" />
                <xsd:attribute name="x" type="xsd:integer" use="required" />
                <xsd:attribute name="y" type="xsd:integer" use="required" />
                <xsd:attribute name="z" type="xsd:integer" use="optional" />
                <xsd:attribute name="date" type="imperial_date" use="optional" />
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

    <xsd:complexType name="uwp">
        <xsd:annotation>
            <xsd:documentation>
                Universal World Profile: An encoded listing of the world
                parameters. Each item code is listed in the reference section
                (above or a default value in AstroML.xml). 
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="port"       type="code" />
            <xsd:element name="size"       type="code" />
            <xsd:element name="atmosphere" type="code" />
            <xsd:element name="hydrograph" type="code" />
            <xsd:element name="population" type="code" />
            <xsd:element name="government" type="code" />
            <xsd:element name="lawlevel"   type="code" />
            <xsd:element name="technology" type="code" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="pbg">
        <xsd:sequence>
            <xsd:element name="multiplier" type="code" />
            <xsd:element name="belts"      type="code" />
            <xsd:element name="giants"     type="code" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="planet">
        <xsd:annotation>
            <xsd:documentation>
                Each planet in a system may contain an extended set of
                information. This type holds all of this information. 
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="name" type="name" />
            <xsd:element name="UWP" type="uwp" minOccurs="0" />
            <xsd:element name="moon" type="moonOrbit" minOccurs="0" maxOccurs="30" />
        </xsd:sequence>
    </xsd:complexType>
    <xsd:complexType name="orbit">
        <xsd:annotation>
            <xsd:documentation>
                The extended system generation lists all orbits around a star, 
                each orbit contains either a gas giant, an asteriod belt, a planet, 
                a star, or is empty. Stellar orbits are numbered starting from
                0 and going outward. CT (and following canon) has a table of
                orbital distances based upon Bodes law. GT uses a formula based 
                upon Bodes law to calculate each orbital distance. Other 
                generation system use alternative systems, but will generate
                a list of orbits in order and a set of distances. 
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="zone" type="orbit_zone" minOccurs="0" />
            <xsd:element name="distance" type="xsd:float" minOccurs="0" />
            <xsd:element name="eccentricity" type="xsd:float" minOccurs="0" />
            <xsd:choice>
                <xsd:element name="planet" type="planet" minOccurs="0" />
                <xsd:element name="star" type="star" minOccurs="0" />
            </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="type" type="orbit_type" use="required" />
        <xsd:attribute name="zone" type="orbit_zone" use="optional" />
        <xsd:attribute name="orbitNo" type="xsd:nonNegativeInteger" use="required" />
    </xsd:complexType>

    <xsd:complexType name="moonOrbit">
        <xsd:all>
            <xsd:element name="name" type="name" />
            <xsd:element name="UMP" type="uwp" />
        </xsd:all>
        <xsd:attribute name="orbit">
            <xsd:simpleType>
                <xsd:restriction base="xsd:float">
                    <xsd:minInclusive value="0.0" />
                    <xsd:maxInclusive value="1000.0" />
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:complexType>
    
    <xsd:complexType name="star">
        <xsd:annotation>
            <xsd:documentation>
                A star defines the basics of a stellar body, either primary
                or companion star. The star optionally contains the orbits of
                every item in the system, though this should be used for the 
                primary only, a middle or far companion may also have orbiting
                planets. 
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="name" type="name" minOccurs="0"/>
            <xsd:element name="spectrum" type="code" />
            <xsd:element name="modifier" type="code" />
            <xsd:element name="luminosity">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                        <xsd:maxLength value="3"/>
                        <xsd:minLength value="1"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:element>
            <xsd:element name="age" type="xsd:positiveInteger" minOccurs="0" />
            <xsd:element name="orbit" type="orbit" minOccurs="0" maxOccurs="30"/>
        </xsd:sequence>
        <xsd:attribute name="peculiar" type="remark" use="optional" />
    </xsd:complexType>
    
    <xsd:complexType name="group">
        <xsd:annotation>
            <xsd:documentation>
                The group is for groups of systems. It is used to define sector,
                subsector borders and can be extended to include any number of
                other groups (e.g. Quadrants or Domains). If using another 
                mapping system, it can be used to enclose those systems as well.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="name" type="name" />
            <xsd:element name="location" type="location" />
            <xsd:element name="comment" type="text" minOccurs="0" />
            <xsd:element name="extent" minOccurs="0">
                <xsd:complexType>
                    <xsd:attribute name="x" type="xsd:integer" use="required" />
                    <xsd:attribute name="y" type="xsd:integer" use="required" />
                    <xsd:attribute name="z" type="xsd:integer" use="optional" />
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
        <xsd:attributeGroup ref="record_group" />
        <xsd:attribute name="parent" type="secondaryIDREF" use="optional" />
        <xsd:attribute name="type" type="group_type" />
    </xsd:complexType>

    <xsd:complexType name="provider" mixed="false">
        <xsd:annotation>
            <xsd:documentation>
                Providers refer to game systems (standard providers) and 
                independent groups. Providers are listed in the provider table
                as part of the reference data. The provider reference ID
                is part of the table, data, sector, subsector and system tags
                to allow keeping track of the source of the data being used. 
            </xsd:documentation>
        </xsd:annotation>
        <xsd:attribute name="id" use="required" type="primaryID" />
        <xsd:attribute name="desc" use="required" type="description" />
        <xsd:attribute name="name" use="optional" type="name" />
        <xsd:attribute name="email" use="optional">
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                <xsd:pattern value="\S+@\S+"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="link" type="xsd:anyURI" use="optional"/>
    </xsd:complexType>
<!--
    <xsd:complexType name="hex">
        <xsd:annotation>
            <xsd:documentation>
                Identify the hex location of the system in regards to a sector, 
                subsector, or other group location. This assumes the group is
                smaller than a sector because of the s_hex type limitations. 
                In theory, the system reading the AstroML.xml document needs
                to be able to understand and translate all three sets of values
                properly. 
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
            <xsd:extension base="s_hex">
                <xsd:attribute name="type" use="required" type="group_type"/>
                <xsd:attribute name="group" type="secondaryIDREF" />
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>
-->
    <xsd:complexType name="text" mixed="true">
        <xsd:annotation>
            <xsd:documentation>
                The text type is used to hold HTML formatted documentation,
                usually copied from previous sources. Though at some point
                the user will be able to edit this HTML text and add their 
                own material. 
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:restriction base="xsd:anyType">
                <xsd:sequence>
                    <xsd:any namespace="http://www.w3.org/1999/xhtml" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
                </xsd:sequence>
            </xsd:restriction>
        </xsd:complexContent>
    </xsd:complexType>

    <!--====================================================-->
    <!-- Attribute Groups: Groups of attributes             -->
    <!--====================================================-->
    <xsd:attributeGroup name="record_group">
        <xsd:attribute name="id" use="required" type="secondaryID"/>
        <xsd:attribute name="desc" use="required" type="description" />
        <xsd:attribute name="provider" use="required" type="primaryIDREF" />
        <xsd:attribute name="color"/>
    </xsd:attributeGroup>
    <!--====================================================-->
    <!-- Free Elements used in more than one place.         -->
    <!-- also needed for the key/keyrefs used later         -->
    <!--====================================================-->

    <!--====================================================-->
    <!--All details must be contained within the ASTROGATION document.-->
    <!--====================================================-->
    <xsd:element name="astrogation">
        <xsd:annotation>
            <xsd:documentation>Astrogation control information.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="reference">
                    <xsd:annotation>
                        <xsd:documentation>
                            All reference information must be provided in this 
                            section. Contains the tables to define the meanings
                            of the coded used in the mapping database. 
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:choice maxOccurs="unbounded">
                                <xsd:element name="provider" type="provider" />

                                <xsd:element name="table">
                                    <xsd:annotation>
                                        <xsd:documentation>Each table of reference data contains related information.</xsd:documentation>
                                    </xsd:annotation>
                                    <xsd:complexType>
                                        <xsd:sequence minOccurs="0" maxOccurs="unbounded">
                                            <xsd:element name="record">
                                                <xsd:annotation>
                                                    <xsd:documentation>Each data item is identified by a unique code and must contain both a description and a "code".</xsd:documentation>
                                                </xsd:annotation>
                                                <xsd:complexType mixed="false">
                                                    <xsd:simpleContent>
                                                        <xsd:extension base="description">
                                                            <xsd:attributeGroup ref="record_group" />
                                                            <xsd:attribute name="code" use="required" type="name" />
                                                        </xsd:extension>
                                                    </xsd:simpleContent>
                                                </xsd:complexType>
                                            </xsd:element>
                                        </xsd:sequence>
                                        <xsd:attributeGroup ref="record_group" />
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:choice>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
                <!-- Split the Reference data from the mapping data -->
                <xsd:element name="mapping">
                    <xsd:annotation>
                        <xsd:documentation>
                            All mapping is dealt with in this section.
                        </xsd:documentation>
                    </xsd:annotation>
                    <xsd:complexType>
                        <xsd:sequence minOccurs="0">
                            <xsd:choice maxOccurs="unbounded">
                                <xsd:element name="group" type="group" />
                                <xsd:element name="link">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            Link or trade route between two (or more) systems 
                                        </xsd:documentation>
                                    </xsd:annotation>
                                    <xsd:complexType>
                                        <xsd:sequence minOccurs="2" maxOccurs="unbounded">
                                            <xsd:element name="location" type="location" />
                                        </xsd:sequence>
                                        <xsd:attributeGroup ref="record_group" />
                                        <xsd:attribute name="linkType" type="secondaryIDREF" use="optional"/>
                                    </xsd:complexType>
                                </xsd:element>
                                <xsd:element name="system">
                                    <xsd:annotation>
                                        <xsd:documentation>
                                            Summary details for a system. UPP details 
                                            for the system as a whole or average 
                                            should be used.
                                        </xsd:documentation>
                                    </xsd:annotation>
                                    <xsd:complexType>
                                        <xsd:sequence minOccurs="1" maxOccurs="1">
                                            <xsd:element name="name" type="name" />
                                            <xsd:element name="location" type="location" />
                                            <xsd:element name="UWP" type="uwp" />
                                            <xsd:element name="bases" type="code"/>
                                            <xsd:element name="tradeCodes" type="remarks"/>
                                            <xsd:element name="remarks" type="remarks"/>
                                            <xsd:element name="zone" type="code" />
                                            <xsd:element name="PBG" type="pbg" />
                                            <xsd:element name="polity" type="remark" />
                                            <xsd:element name="star" type="star" minOccurs="0" maxOccurs="5"/>
                                            <xsd:element name="comment" type="text" minOccurs="0" />
                                        </xsd:sequence>
                                        <xsd:attribute name="id" use="required" type="tertiaryID" />
                                        <xsd:attribute name="provider" use="optional" type="primaryIDREF" />
                                    </xsd:complexType>
                                </xsd:element>
                            </xsd:choice>
                        </xsd:sequence>
                        <xsd:attribute name="relation" use="optional">
                            <xsd:simpleType>
                                <xsd:restriction base="name">
                                    <xsd:enumeration value="hex" />
                                    <xsd:enumeration value="cart" />
                                    <xsd:enumeration value="polar" />
                                </xsd:restriction>
                            </xsd:simpleType>
                        </xsd:attribute>
                        <xsd:attribute name="layout" use="optional">
                            <xsd:simpleType>
                                <xsd:restriction base="remark">
                                    <xsd:enumeration value="2D" />
                                    <xsd:enumeration value="3D" />
                                </xsd:restriction>
                            </xsd:simpleType>
                        </xsd:attribute>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <!--====================================================-->
    <!-- Key references and Key ID references               -->
    <!--====================================================-->
    <!--
    <xsd:key name="provider">
        <xsd:selector xpath="./provider" />
        <xsd:field xpath="id" />
    </xsd:key>
    -->
</xsd:schema>
